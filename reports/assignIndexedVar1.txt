							      <
___Entering new scope...				      <
							      <
TOKEN: LBRACE 		 LEXEME: {			      <
TOKEN: IDENT 		 LEXEME: A			      <
TOKEN: ASSIGN 		 LEXEME: =			      <
INDEX ->  epsilon					      <
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR		      <
___Adding A to symbol table				      <
TOKEN: LIST 		 LEXEME: list			      <
TOKEN: LPAREN 		 LEXEME: (			      <
TOKEN: INTCONST 		 LEXEME: 23		      <
CONST -> INTCONST					      <
TOKEN: COMMA 		 LEXEME: ,			      <
TOKEN: FLOATCONST 		 LEXEME: 3.14		      <
CONST -> FLOATCONST					      <
TOKEN: COMMA 		 LEXEME: ,			      <
TOKEN: TRUE 		 LEXEME: TRUE			      <
CONST -> TRUE						      <
TOKEN: COMMA 		 LEXEME: ,			      <
TOKEN: STRCONST 		 LEXEME: "BoJack"	      <
CONST -> STRCONST					      <
TOKEN: RPAREN 		 LEXEME: )			      <
CONST_LIST -> CONST					      <
CONST_LIST -> CONST, CONST_LIST				      <
CONST_LIST -> CONST, CONST_LIST				      <
CONST_LIST -> CONST, CONST_LIST				      <
LIST_EXPR -> LIST ( CONST_LIST )			      <
EXPR -> LIST_EXPR					      <
EXPR -> ASSIGNMENT_EXPR					      <
TOKEN: SEMICOLON 		 LEXEME: ;		      <
TOKEN: IDENT 		 LEXEME: A			      <
TOKEN: LBRACKET 		 LEXEME: [		      <
TOKEN: LBRACKET 		 LEXEME: [		      <
TOKEN: INTCONST 		 LEXEME: 3		      <
CONST -> INTCONST					      <
FACTOR -> CONST						      <
TOKEN: RBRACKET 		 LEXEME: ]		      <
MULT_OP_LIST -> epsilon					      <
TERM -> FACTOR MULT_OP_LIST				      <
HERE 2222						      <
ADD_OP_LIST -> epsilon					      <
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST			      <
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC			      <
EXPR -> ARITHLOGIC_EXPR					      <
TOKEN: RBRACKET 		 LEXEME: ]		      <
TOKEN: ASSIGN 		 LEXEME: =			      <
INDEX ->  [[ EXPR ]]					      <
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR		      <
TOKEN: STRCONST 		 LEXEME: "Mr. Peanutbutter"   <
CONST -> STRCONST					      <
FACTOR -> CONST						      <
TOKEN: SEMICOLON 		 LEXEME: ;		      <
MULT_OP_LIST -> epsilon					      <
TERM -> FACTOR MULT_OP_LIST				      <
HERE 2222						      <
ADD_OP_LIST -> epsilon					      <
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST			      <
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC			      <
EXPR -> ARITHLOGIC_EXPR					      <
EXPR -> ASSIGNMENT_EXPR					      <
TOKEN: PRINT 		 LEXEME: print			      <
TOKEN: LPAREN 		 LEXEME: (			      <
TOKEN: IDENT 		 LEXEME: A			      <
TOKEN: RPAREN 		 LEXEME: )			      <
ENTIRE_VAR -> IDENT					      <
VAR -> ENTIRE_VAR					      <
FACTOR -> VAR						      <
MULT_OP_LIST -> epsilon					      <
TERM -> FACTOR MULT_OP_LIST				      <
HERE 2222						      <
ADD_OP_LIST -> epsilon					      <
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST			      <
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC			      <
EXPR -> ARITHLOGIC_EXPR					      <
OUTPUT_EXPR -> PRINT ( EXPR )				      <
( 23 3.14 "Mr. Peanutbutter" "BoJack" )				( 23   3.14 "Mr. Peanutbutter" "BoJack" )
EXPR -> OUTPUT_EXPR					      <
TOKEN: RBRACE 		 LEXEME: }			      <
EXPR_LIST -> epsilon					      <
EXPR_LIST -> ; EXPR EXPR_LIST				      <
EXPR_LIST -> ; EXPR EXPR_LIST				      <
COMPOUND_EXPR -> { EXPR EXPR_LIST }			      <
EXPR -> COMPOUND_EXPR					      <
START -> EXPR						      <

---- Completed parsing ----					---- Completed parsing ----

Value of the expression is: ( 23 3.14 "Mr. Peanutbutter" "BoJ	Value of the expression is: ( 23   3.14 "Mr. Peanutbutter" "B
							      <
___Exiting scope...					      <
							      <
